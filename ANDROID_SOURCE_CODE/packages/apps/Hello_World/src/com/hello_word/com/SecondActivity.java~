package com.hello_word.com;

import android.app.Activity;
import android.content.Context;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.webkit.*;
import android.widget.*;
import android.view.*;
import android.util.Log;
import android.view.View.OnClickListener;

import android.widget.LinearLayout;
import java.lang.Thread;

import android.os.IBinder;
import android.os.SystemClock;
import android.os.ServiceManager;
import java.lang.Exception;
import android.graphics.Color;
import android.widget.LinearLayout.LayoutParams;

public class SecondActivity extends Activity {


    private boolean inject_to_main = false;
    private boolean inject_to_aframe = false;

//Called when the activity is first created. 

  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    // hide titlebar of application
    // must be before setting the layout
//    requestWindowFeature(Window.FEATURE_NO_TITLE);
    // hide statusbar of Android
    // could also be done later
//    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

    setContentView(R.layout.l2);

	WebView wv = (WebView) findViewById(R.id.webview);

	wv.setWebViewClient(new WebViewClient() {
		public boolean shouldOverrideUrlLoading(WebView view, String url) {
		       return true;
		}
	});

	wv.getSettings().setJavaScriptEnabled(true);

	wv.loadUrl("http://m.techcrunch.com");


    try
    {
        Log.d("XIAO","AframeActivity: requestedPermissions = " + this.getPackageManager().getPackageInfo(this.getPackageName(), 0).requestedPermissions);
    }
    catch (Exception e){}

/* DISPLAY ISOLATION
    final LinearLayout textview = (LinearLayout)findViewById(R.id.textview);
    textview.setGravity(Gravity.CENTER_HORIZONTAL);

    final Button tv = new Button(this);  
    tv.setText("New Button Added by AFrame");
    tv.setTextSize((float) 20); 
    tv.setTextColor(Color.BLACK);
    tv.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));

    final Button tv2 = new Button(this);  
    tv2.setText("New Button Added by AFrame");
    tv2.setTextSize((float) 20); 
    tv2.setTextColor(Color.BLACK);
    tv2.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));

    final LinearLayout ll = (LinearLayout)findViewById(R.id.host_reserve);

    final LinearLayout ll_2 = (LinearLayout)findViewById(R.id.display_test);  

    final Button button01 = (Button) findViewById(R.id.button_main);
    button01.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
		ll.addView(tv);
             }
         });

    final Button button02 = (Button) findViewById(R.id.button_aframe);
    button02.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
		ll_2.addView(tv2);
             }
         });

*/

/* INPUT ISOLATION EVALUATION
    final LinearLayout textview = (LinearLayout)findViewById(R.id.textview);
    textview.setGravity(Gravity.CENTER_HORIZONTAL);

    final Button tv = new Button(this);  
    tv.setText("Events Received By AFrame");
    tv.setTextSize((float) 20); 
    tv.setBackgroundColor(Color.BLACK);

    final LinearLayout ll = (LinearLayout)findViewById(R.id.host_reserve);
    ll.setOnClickListener(new OnClickListener() {
 
	@Override
	public void onClick(View arg0) {
 		Toast toast = new Toast(getApplicationContext());
		toast.setGravity(Gravity.BOTTOM, 0, 0);
		toast.setDuration(Toast.LENGTH_LONG);	
		toast.setView(tv);
		toast.show();
	}
 
	});

    final AframeContainer aframe_Container = (AframeContainer)findViewById(R.id.aframe_container);
    aframe_Container.setOnClickListener(new OnClickListener() {
 
	@Override
	public void onClick(View arg0) {
 		Toast toast = new Toast(getApplicationContext());
		toast.setGravity(Gravity.BOTTOM, 0, 0);
		toast.setDuration(Toast.LENGTH_LONG);	
		toast.setView(tv);
		toast.show();
	}
 
	});



    final IBinder wmbinder = ServiceManager.getService( "window" ); 
    final IWindowManager m_WndManager = IWindowManager.Stub.asInterface(wmbinder);

    final Button button01 = (Button) findViewById(R.id.button_aframe);
    button01.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
		inject_to_main = true;
             }
         });

    final Button button02 = (Button) findViewById(R.id.button_main);
    button02.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
		inject_to_aframe = true;
             }
         });

     final Thread t = new Thread() {
            public void run() {
			while(true){
        		    if(inject_to_main)try{
				m_WndManager.injectPointerEvent(MotionEvent.obtain(SystemClock.uptimeMillis(),
  					SystemClock.uptimeMillis(),MotionEvent.ACTION_DOWN,50, 210, 0), true);
    				m_WndManager.injectPointerEvent(MotionEvent.obtain(SystemClock.uptimeMillis(),
					SystemClock.uptimeMillis(),MotionEvent.ACTION_UP,50, 210, 0), true);
				inject_to_main = false;
			    }catch (Exception e){}
			    if(inject_to_aframe)try{
				m_WndManager.injectPointerEvent(MotionEvent.obtain(SystemClock.uptimeMillis(),
  					SystemClock.uptimeMillis(),MotionEvent.ACTION_DOWN,10, 450, 0), true);
    				m_WndManager.injectPointerEvent(MotionEvent.obtain(SystemClock.uptimeMillis(),
					SystemClock.uptimeMillis(),MotionEvent.ACTION_UP,10, 450, 0), true);
				inject_to_aframe = false;
			    }catch (Exception e){}
			}
            }
        };
        t.start();

*/

/*
    final WebView webview = (WebView)findViewById(R.id.webview02);
    webview.setWebViewClient(new InsideWebViewClient());
    webview.getSettings().setJavaScriptEnabled(true);
    webview.loadUrl("http://www.ehow.com/how_8566712_use-kompozer-php-files.html");
*/
    //AMIT
    /*Button btn = new Button(this); 
    btn.setText(R.string.CanvasBtn); 
    LinearLayout ll = (LinearLayout)findViewById(R.id.outer);
    ll.addView(btn); 
    

    try{
	Thread.sleep(1500);
    }
    catch(InterruptedException ex){

    }
    */
    //DONE

/*
    final EditText plain_edit_text = (EditText) this.findViewById(R.id.editText2);

    final Button button01 = (Button) findViewById(R.id.button_second01);
    button01.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
		button01.setText(button01.getText()+"again");
		Log.d("XIAO","Inside Second Activity");		
		Toast toast = Toast.makeText(getApplicationContext(), "Response in Second activity, you are: " + plain_edit_text.getText().toString(), Toast.LENGTH_SHORT);
		toast.show();
             }
         });
*/
    }  

     @Override
      public void onStart() {
    	super.onStart();
	Log.d("XIAO","Inside onStart() in SecondActivity");
       }

    @Override
      public void onRestart() {
    	super.onRestart();
	Log.d("XIAO","Inside onRestart() in SecondActivity");
       }

     @Override
      public void onPause() {
    	super.onPause();
	Log.d("XIAO","Inside onPause() in SecondActivity");
       }

    @Override
      public void onResume() {
    	super.onResume();
	Log.d("XIAO","Inside onResume() in SecondActivity");
       }

    @Override
      public void onStop() {
    	super.onStop();
	Log.d("XIAO","Inside onStop() in SecondActivity");
       }

    @Override
      public void onDestroy() {
	Log.d("XIAO","Inside onDestroy() in SecondActivity");
    	super.onDestroy();
       }


 /* Class that prevents opening the Browser */
    private class InsideWebViewClient extends WebViewClient {
        @Override
        public boolean shouldOverrideUrlLoading(WebView view, String url) {
            view.loadUrl(url);
            return true;
        }
    }

}


/********** Used to Test GeoLocation Service ***************/
/*
public class SecondActivity extends Activity implements LocationListener {

  private TextView latituteField;
  private TextView longitudeField;
  private LocationManager locationManager;
  private String provider;

  
// Called when the activity is first created.

  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.l2);
    latituteField = (TextView) findViewById(R.id.TextView202);
    longitudeField = (TextView) findViewById(R.id.TextView204);

    // Get the location manager
    locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
    // Define the criteria how to select the locatioin provider -> use
    // default
    Criteria criteria = new Criteria();
    provider = locationManager.getBestProvider(criteria, false);
    Location location = locationManager.getLastKnownLocation(provider);

    // Initialize the location fields
    if (location != null) {
      System.out.println("Provider " + provider + " has been selected.");
      onLocationChanged(location);
    } else {
      latituteField.setText("Location not available");
      longitudeField.setText("Location not available");
    }

    WebView wv = (WebView)findViewById(R.id.webview2);
    wv.loadUrl("http://www.google.com");
  }

  // Request updates at startup 
  @Override
  protected void onResume() {
    super.onResume();
    locationManager.requestLocationUpdates(provider, 400, 1, this);
  }

  // Remove the locationlistener updates when Activity is paused 
  @Override
  protected void onPause() {
    super.onPause();
    locationManager.removeUpdates(this);
  }

  @Override
  public void onLocationChanged(Location location) {
    int lat = (int) (location.getLatitude());
    int lng = (int) (location.getLongitude());
    latituteField.setText(String.valueOf(lat));
    longitudeField.setText(String.valueOf(lng));
  }

  @Override
  public void onStatusChanged(String provider, int status, Bundle extras) {
    // TODO Auto-generated method stub

  }

  @Override
  public void onProviderEnabled(String provider) {
    Toast.makeText(this, "Enabled new provider " + provider,
        Toast.LENGTH_SHORT).show();

  }

  @Override
  public void onProviderDisabled(String provider) {
    Toast.makeText(this, "Disabled provider " + provider,
        Toast.LENGTH_SHORT).show();
  }
} 
*/
